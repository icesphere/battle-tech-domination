<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:p="http://primefaces.org/ui"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:btd="http://java.sun.com/jsf/composite/components">

<ui:composition template="/templates/commonLayout.xhtml">

    <ui:define name="head">
        <h:outputStylesheet name="game.css" library="css" />
    </ui:define>

    <ui:define name="content">
        <h:form>

            <p:remoteCommand name="updateCardView" actionListener="#{gameView.updateCardView}" update="cardViewSection"/>

            <p:remoteCommand name="cardClicked" actionListener="#{gameView.cardClicked}"/>

            <p:remoteCommand name="refreshGamePage" process="@this" update="gamePage"/>
            <p:remoteCommand name="refreshLeftSection" process="@this" update="leftSection"/>
            <p:remoteCommand name="refreshMiddleSection" process="@this" update="middleSection"/>
            <p:remoteCommand name="refreshRightSection" process="@this" update="rightSection"/>
            <p:remoteCommand name="refreshHand" process="@this" update="handSection"/>
            <p:remoteCommand name="refreshPlayArea" process="@this" update="playAreaSection"/>
            <p:remoteCommand name="refreshPlayerInfo" process="@this" update="playerInfoSection"/>
            <p:remoteCommand name="refreshTurnInfo" process="@this" update="turnInfoSection"/>
            <p:remoteCommand name="refreshTurnButtons" process="@this" update="turnButtonsSection"/>
            <p:remoteCommand name="refreshPlayerCardInfo" process="@this" update="playerCardInfoSection"/>
            <p:remoteCommand name="refreshSupply" process="@this" update="supplySection"/>
            <p:remoteCommand name="refreshUnits" process="@this" update="unitsSection"/>

            <h:panelGroup layout="block" id="gamePage" styleClass="gamePage">

                <h:panelGroup layout="block" id="leftSection" styleClass="leftSection">

                    <h:panelGroup layout="block" id="supplySection" styleClass="supplySection">

                        <div class="baseCards">
                            <h:panelGroup rendered="#{!empty gameView.game.infantryPlatoons}">
                                <btd:supplyCard card="#{gameView.game.infantryPlatoons[0]}"/>
                            </h:panelGroup>
                            <h:panelGroup rendered="#{!empty gameView.game.basicFactories}">
                                <btd:supplyCard card="#{gameView.game.basicFactories[0]}"/>
                            </h:panelGroup>
                            <h:panelGroup rendered="#{!empty gameView.game.munitionsFactories}">
                                <btd:supplyCard card="#{gameView.game.munitionsFactories[0]}"/>
                            </h:panelGroup>
                            <h:panelGroup rendered="#{!empty gameView.game.advancedFactories}">
                                <btd:supplyCard card="#{gameView.game.advancedFactories[0]}"/>
                            </h:panelGroup>
                        </div>

                        <div class="supplyGrid">
                            <ui:repeat value="#{gameView.game.supplyGrid}" var="card">
                                <btd:supplyCard card="#{card}"/>
                            </ui:repeat>
                        </div>

                    </h:panelGroup>

                    <h:panelGroup layout="block" id="cardViewSection">
                        <h:panelGroup layout="block" styleClass="cardViewSection">
                            <div class="cardView">
                                <h:panelGroup layout="block" rendered="#{!empty gameView.cardToView}">
                                    <h:outputText value="#{gameView.cardToView.name}" style="font-weight: bold; font-size: 20px;"/>
                                    <div style="padding-top: 15px; font-size: 18px;">
                                        <h:outputText value="#{gameView.getCardTypeDisplayName(gameView.cardToView.cardType)}"/>
                                    </div>
                                    <div style="padding-top: 15px;">
                                        <h:outputText value="#{gameView.cardToView.industryCost}"/>
                                        <h:graphicImage library="images" name="IndustryIcon.png" styleClass="playerInfoIcon"/>
                                        <h:graphicImage rendered="#{gameView.cardToView.losTechCost gt 0}" library="images" name="LosTechIcon.png" styleClass="playerInfoIcon" style="margin-left: 15px;"/>
                                    </div>
                                    <h:panelGroup layout="block" rendered="#{gameView.cardToView.unit}" style="padding-top: 15px;">
                                        <h:outputText value="#{gameView.cardToView.attack}"/>
                                        <h:graphicImage library="images" name="AttackIcon.png" styleClass="playerInfoIcon"/>
                                        <h:outputText value="#{gameView.cardToView.defense}" style="padding-left: 15px;"/>
                                        <h:graphicImage library="images" name="DefenseIcon.png" styleClass="playerInfoIcon"/>
                                    </h:panelGroup>
                                    <div style="padding-top: 15px;">
                                        <h:outputText value="#{gameView.cardToView.cardText}"/>
                                    </div>
                                </h:panelGroup>
                                <h:panelGroup layout="block" rendered="#{empty gameView.cardToView}" styleClass="emptyCardView">
                                    Hover over a card to see card details.
                                </h:panelGroup>
                            </div>
                        </h:panelGroup>
                    </h:panelGroup>

                </h:panelGroup>

                <h:panelGroup layout="block" id="middleSection" styleClass="middleSection">

                    <div class="overrunCards">
                        <btd:overrunCard cardsLeft="#{gameView.game.heavyCasualties.size()}" pileName="Heavy Casualties"/>
                        <btd:overrunCard cardsLeft="#{gameView.game.raidedSupplies.size()}" pileName="Raided Supplies"/>
                        <btd:overrunCard cardsLeft="#{gameView.game.criticalHits.size()}" pileName="Critical Hits"/>
                        <btd:overrunCard cardsLeft="#{gameView.game.retreats.size()}" pileName="Retreats"/>
                    </div>

                    <h:panelGroup layout="block" id="playerInfoSection" styleClass="playerInfoSection">

                        <btd:playerInfo player="#{gameView.player}" playerClass="player"/>

                        <btd:playerInfo player="#{gameView.opponent}" playerClass="opponent"/>

                    </h:panelGroup>

                    <h:panelGroup layout="block" id="unitsSection" styleClass="unitsSection">

                        <h:panelGroup layout="block" id="playerUnitsSection" styleClass="playerUnitsSection player">
                            <h:outputText value="#{gameView.player.playerName}'s Units:" styleClass="unitsLabel"/>
                            <div style="padding: 10px 0;">
                                <ui:repeat value="#{gameView.player.deploymentZone}" var="card">
                                    <btd:card card="#{card}" source="playerUnits"/>
                                </ui:repeat>
                            </div>
                        </h:panelGroup>

                        <h:panelGroup layout="block" id="opponentUnitsSection" styleClass="opponentUnitsSection opponent">
                            <h:outputText value="#{gameView.opponent.playerName}'s Units:" styleClass="unitsLabel"/>
                            <div style="padding: 10px 0;">
                                <ui:repeat value="#{gameView.opponent.deploymentZone}" var="card">
                                    <btd:card card="#{card}" source="opponentUnits"/>
                                </ui:repeat>
                            </div>
                        </h:panelGroup>

                    </h:panelGroup>

                    <h:panelGroup layout="block" id="playAreaSection" styleClass="playAreaSection">
                        <span style="font-style: italic">Play Area:</span>
                        <div class="playArea">
                            <ui:repeat value="#{gameView.cardsForPlayArea}" var="card">
                                <btd:card card="#{card}" source="playArea"/>
                            </ui:repeat>
                        </div>
                    </h:panelGroup>

                    <h:panelGroup layout="block" id="handSection" styleClass="handSection">
                        <span style="font-style: italic">Your Hand:</span>
                        <div class="hand">
                            <ui:repeat value="#{gameView.player.hand}" var="card">
                                <btd:card card="#{card}" source="hand"/>
                            </ui:repeat>
                        </div>
                    </h:panelGroup>

                </h:panelGroup>

                <h:panelGroup layout="block" id="rightSection" styleClass="rightSection">

                    <h:panelGroup layout="block" id="gameLogSection" styleClass="gameLogSection">
                        <h:outputText value="#{gameView.game.gameLog.toString()}"/>
                    </h:panelGroup>

                    <h:panelGroup layout="block" id="playerCardInfoSection" styleClass="playerCardInfoSection">
                        <div class="playerCardInfoBox">
                            <div class="playerCardInfoRow">
                                <div class="playerCardInfoNameContainer">&#160;</div>
                                <div class="playerCardInfoValue">Hand</div>
                                <div class="playerCardInfoValue">Deck</div>
                                <div class="playerCardInfoValue">Discard</div>
                            </div>
                            <div class="playerCardInfoRow">
                                <div class="playerCardInfoNameContainer player">
                                    <div class="playerCardInfoName">
                                        <h:outputText value="#{gameView.player.playerName}"/>
                                    </div>
                                </div>
                                <div class="playerCardInfoValue">#{gameView.player.handSize}</div>
                                <div class="playerCardInfoValue">#{gameView.player.deckSize}</div>
                                <div class="playerCardInfoValue">#{gameView.player.discardSize}</div>
                            </div>
                            <div class="playerCardInfoRow">
                                <div class="playerCardInfoNameContainer opponent">
                                    <div class="playerCardInfoName">
                                        <h:outputText value="#{gameView.opponent.playerName}"/>
                                    </div>
                                </div>
                                <div class="playerCardInfoValue">#{gameView.opponent.handSize}</div>
                                <div class="playerCardInfoValue">#{gameView.opponent.deckSize}</div>
                                <div class="playerCardInfoValue">#{gameView.opponent.discardSize}</div>
                            </div>
                        </div>
                    </h:panelGroup>

                    <h:panelGroup layout="block" id="turnInfoSection" styleClass="turnInfoSection">
                        <div style="padding-top: 5px;">
                            <h:outputText styleClass="currentPlayerTurnText #{gameView.player.yourTurn ? 'player' : 'opponent'}" value="#{gameView.game.currentPlayer.playerName}'s Turn"/>
                        </div>
                        <div style="padding-top: 20px; padding-bottom: 10px;">
                            <h:outputText styleClass="turnPhaseText" value="#{gameView.turnPhase}"/>
                        </div>
                        <h:panelGroup layout="block" styleClass="turnValueTextWrapper" rendered="#{gameView.game.currentPlayer.actionPhase}">
                            <h:outputText styleClass="turnValueText" value="#{gameView.game.currentPlayer.actions}" style="padding-right: 10px;"/>
                            <h:outputText styleClass="turnValueText" value="Actions"/>
                        </h:panelGroup>
                        <h:panelGroup layout="block" styleClass="turnValueTextWrapper" rendered="#{gameView.game.currentPlayer.actionPhase or gameView.game.currentPlayer.buyPhase}">
                            <h:outputText styleClass="turnValueText" value="#{gameView.game.currentPlayer.industry}"/>
                            <h:graphicImage library="images" name="IndustryIcon.png" styleClass="turnValueIcon"/>
                            <h:outputText styleClass="turnValueText" style="padding-left: 20px;" value="#{gameView.game.currentPlayer.losTech}"/>
                            <h:graphicImage library="images" name="LosTechIcon.png" styleClass="turnValueIcon"/>
                        </h:panelGroup>
                    </h:panelGroup>

                    <h:panelGroup layout="block" rendered="#{gameView.player.yourTurn}" id="turnButtonsSection" styleClass="turnButtonsSection">

                        <h:panelGroup layout="block" styleClass="turnButtonWrapper" rendered="#{gameView.player.combatStart}">
                            <p:commandLink process="@this" update="middleSection rightSection" styleClass="turnButton" value="ATTACK!" actionListener="#{gameView.nextPhase}"/>
                        </h:panelGroup>

                        <h:panelGroup layout="block" styleClass="turnButtonWrapper" rendered="#{gameView.player.actionPhase}">
                            <p:commandLink process="@this" update="supplySection middleSection rightSection" styleClass="turnButton" value="BUY CARDS" actionListener="#{gameView.nextPhase}"/>
                        </h:panelGroup>

                        <h:panelGroup layout="block" styleClass="turnButtonWrapper" rendered="#{gameView.player.buyPhase}">
                            <p:commandLink process="@this" update="gamePage" styleClass="turnButton" value="END TURN" actionListener="#{gameView.endTurn}"/>
                        </h:panelGroup>

                    </h:panelGroup>

                </h:panelGroup>

            </h:panelGroup>

        </h:form>

        <p:socket onMessage="handleGameMessage" channel="/game/#{gameView.game.gameId}/#{userSession.user.username}" autoConnect="true" widgetVar='gameMessageSubscriber' />

        <script type="text/javascript">
            function handleGameMessage(response) {
                console.log("received message from server: ");
                console.log(response);
                
                var message = response.message;
                
                if (message == 'refresh_game_page') {
                    refreshGamePage();
                } else if (message == 'refresh_left_section') {
                    refreshLeftSection();
                } else if (message == 'refresh_middle_section') {
                    refreshMiddleSection();
                } else if (message == 'refresh_right_section') {
                    refreshRightSection();
                } else if (message == 'refresh_hand') {
                    refreshHand();
                } else if (message == 'refresh_play_area') {
                    refreshPlayArea();
                } else if (message == 'refresh_game_log') {
                    refreshGameLog();
                } else if (message == 'refresh_player_info') {
                    refreshPlayerInfo();
                } else if (message == 'refresh_turn_info') {
                    refreshTurnInfo();
                } else if (message == 'refresh_turn_buttons') {
                    refreshTurnButtons();
                } else if (message == 'refresh_player_card_info') {
                    refreshPlayerCardInfo();
                } else if (message == 'refresh_supply') {
                    refreshSupply();
                } else if (message == 'refresh_units') {
                    refreshUnits();
                }
            }
        </script>
    </ui:define>

</ui:composition>
</html>